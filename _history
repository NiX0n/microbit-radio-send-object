{"entries":[{"timestamp":1741184390284,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"http"],[-1,"s"],[0,"://"],[-1,"developers.google.com/blockly/xml\"><variables><variable id=\"}X9z#Hm0he0@9N`}W3/m\">RADIO_GROUP</variable></variables><block type=\"device_forever\" x=\"250\" y=\"-1\"></block><block type=\"pxt-on-start\" x=\"40\" y=\"54\"><statement name=\"HANDLER\"><block type=\"variables_set\"><field name=\"VAR\" id=\"}X9z#Hm0he0@9N`}W3/m\">RADIO_GROUP</field><value name=\"VALUE\"><shadow type=\"math_number\"><field name=\"NUM\">11</field></shadow></value><next><block type=\"radio_set_group\"><value name=\"ID\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"255\" label=\"Id\" precision=\"0\"></mutation><field name=\"SLIDER\">1</field></shadow><block type=\"variables_get\"><field name=\"VAR\" id=\"}X9z#Hm0he0@9N`}W3/m\">RADIO_GROUP</field></block></value><next><block type=\"radio_datagram_send_string\"><value name=\"msg\"><shadow type=\"text\"><field name=\"TEXT\"></field></shadow></value></block></next></block></next></block></statement></block><block type=\"radio_on_string_drag\" x=\"57\" y=\"545\"><value name=\"HANDLER_DRAG_PARAM_receivedString\"><block type=\"argument_reporter_string\"><mutation duplicateondrag=\"true\"></mutation><field name=\"VALUE\">receivedString</field></block></value></block>"],[1,"www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n"],[0,"</xm"]],"start1":12,"start2":12,"length1":1161,"length2":113}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"radio.onReceivedString(function (receivedString) {\n\t\n})\nradio.on\nlet RADIO_GROUP = 11\nradio.setGroup(RADIO_GROUP)\nradio.sendString(\"\")\nbasic.forever(function () {\n\t\n})"],[0,"\n"]],"start1":0,"start2":0,"length1":168,"length2":1}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"   \""],[-1,"preferredEditor\": \"tsprj\""],[1,"additionalFilePaths\": []"],[0,"\n}\n"]],"start1":232,"start2":232,"length1":32,"length2":31}]}]},{"timestamp":1741184583025,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0," {\n\t\n})\n"],[1,"radio.on"],[0,"\nlet RAD"]],"start1":48,"start2":48,"length1":16,"length2":24}]}]},{"timestamp":1741185113555,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"ng(\""],[-1,"HELO"],[0,"\")\nb"]],"start1":120,"start2":120,"length1":12,"length2":8}]}]},{"timestamp":1741201666720,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"ing(\"HEL"],[-1,"L"],[0,"O\")\nbasi"]],"start1":119,"start2":119,"length1":17,"length2":16}]}]},{"timestamp":1741201780555,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,") {\n"],[-1,"    let serialNumber = radio.receivedPacket(RadioPacketProperty.SerialNumber)\n})\n\nfunction radioSendObject(obj: any)\n{\n    let data = JSON.stringify(obj);\n    if(data.length > MAX_PACKET_LENGTH)\n    {\n        data = `\\x02${data}\\x02`\n    }\n}\n\nlet RADIO_GROUP: number = 11\nlet MAX_PACKET_LENGTH: number = 19\nlet SERIAL_NUMBER: number = control.deviceSerialNumber();\nradio.setTransmitSerialNumber(true)"],[1,"\t\n})\n\nlet RADIO_GROUP = 11"],[0,"\nrad"]],"start1":47,"start2":47,"length1":408,"length2":34},{"diffs":[[0,"UP)\n"],[-1,"// Handshake\n"],[0,"radi"]],"start1":102,"start2":102,"length1":21,"length2":8},{"diffs":[[0,"HELLO\")\n"],[-1,"\n\n"],[0,"basic.fo"]],"start1":124,"start2":124,"length1":18,"length2":16}]}]},{"timestamp":1741202342185,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"er)\n"],[-1,"    console.log({ serialNumber, receivedString })\n"],[0,"})\n\n"]],"start1":125,"start2":125,"length1":58,"length2":8},{"diffs":[[0,"  }\n"],[-1,"    for(let p = 0; p < data.length; p += MAX_PACKET_LENGTH)\n    {\n        radio.sendString(data.substr(p, MAX_PACKET_LENGTH))\n    }\n}\n\ninput.onButtonPressed(Button.A, function() {\n    radioSendObject({animal: \"elephantkayaksandbox\"})    \n})\n"],[1,"}"],[0,"\n\nle"]],"start1":287,"start2":287,"length1":249,"length2":9},{"diffs":[[0,"();\n"],[-1,"let rxBuffer: string[] = []\n"],[0,"radi"]],"start1":412,"start2":412,"length1":36,"length2":8}]}]},{"timestamp":1741202904418,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0," })\n"],[-1,"    rxBuffer[serialNumber] = (rxBuffer[serialNumber] || \"\")\n    if (rxBuffer[serialNumber].charCodeAt(0) == 2)\n    {\n        console.log('batch detected')\n    }\n})\n\nfunction onRadioReceivedObject(obj: any)\n{\n\n"],[0,"}"],[1,")"],[0,"\n\nfu"]],"start1":175,"start2":175,"length1":218,"length2":10},{"diffs":[[0,"}\\x0"],[-1,"3"],[1,"2"],[0,"`\n  "]],"start1":328,"start2":328,"length1":9,"length2":9}]}]},{"timestamp":1741203481495,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"d')\n"],[-1,"        if (rxBuffer[serialNumber].charCodeAt(0) == 2)\n"],[0,"    "]],"start1":330,"start2":330,"length1":63,"length2":8}]}]},{"timestamp":1741206259581,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"t(0) == "],[-1,"3"],[1,"2"],[0,")\n    }\n"]],"start1":378,"start2":378,"length1":17,"length2":17}]}]},{"timestamp":1741206262743,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"eAt("],[-1,"rxBuffer[serialNumber].length - 1) == 3)\n        {\n            \n        }"],[1,"0) == 3)"],[0,"\n   "]],"start1":376,"start2":376,"length1":81,"length2":16}]}]},{"timestamp":1741206292702,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"        "],[-1,"rxBuffer[serialNumber]"],[0,"\n       "]],"start1":435,"start2":435,"length1":38,"length2":16}]}]},{"timestamp":1741213113652,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"lNumber]"],[-1," = "],[0,"\n       "]],"start1":457,"start2":457,"length1":19,"length2":16}]}]},{"timestamp":1741213143455,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"] = "],[-1,"rxBuffer[serialNumber].slice(1,-1)\n        }\n        else\n        {\n            return;\n        }\n    }\n    console.log({ serialNumber, receivedString })\n    let obj = JSON.parse(rxBuffer[serialNumber])\n    rxBuffer[serialNumber] = ''\n    onRadioReceivedObject(obj)"],[1,"\n        }\n    }"],[0,"\n})\n"]],"start1":464,"start2":464,"length1":273,"length2":24},{"diffs":[[0,")\n{\n"],[-1,"    console.log(obj)"],[0,"\n}\n\n"]],"start1":528,"start2":528,"length1":28,"length2":8}]}]},{"timestamp":1741213741983,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0," \"\")"],[-1," + receivedString"],[0,"\n"],[1,""],[0,"    "]],"start1":234,"start2":234,"length1":26,"length2":9},{"diffs":[[0,"log("],[-1,"`JSON.parse(${rxBuffer[serialNumber]})`"],[1,"{ serialNumber, receivedString }"],[0,")\n  "]],"start1":584,"start2":584,"length1":47,"length2":40},{"diffs":[[0,"j);\n"],[-1,"    console.log(`data=${data}`)\n"],[0,"    "]],"start1":874,"start2":874,"length1":40,"length2":8},{"diffs":[[0,"ng(\""],[-1,"null"],[1,"HELLO"],[0,"\")\n\n"]],"start1":1447,"start2":1447,"length1":12,"length2":13}]}]},{"timestamp":1741214261701,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"Number)\n"],[1,"    console.log({ serialNumber, receivedString })\n"],[0,"    rxBu"]],"start1":121,"start2":121,"length1":16,"length2":66},{"diffs":[[0,"dString\n"],[-1,""],[0,"    if ("]],"start1":248,"start2":248,"length1":16,"length2":16},{"diffs":[[0,"(0) == 2)\n    {\n"],[1,"        console.log('batch detected')\n"],[0,"        if (rxBu"]],"start1":297,"start2":297,"length1":32,"length2":70},{"diffs":[[0,"    }\n    }\n"],[1,"    console.log(`JSON.parse(${rxBuffer[serialNumber]})`)\n"],[0,"    let obj "]],"start1":577,"start2":577,"length1":24,"length2":81},{"diffs":[[0,"y(obj);\n"],[1,"    console.log(`data=${data}`)\n"],[0,"    if(d"]],"start1":894,"start2":894,"length1":16,"length2":48},{"diffs":[[0,"ct({"],[-1,"str: \"thisisastringlongerthanapacket\", arr: [1,2,3], bool: true})"],[1,"animal: \"elephantkayaksandbox\"})    "],[0,"\n})\n\n"],[1,"\n"],[0,"let "]],"start1":1216,"start2":1216,"length1":78,"length2":50},{"diffs":[[0,"r(true)\n"],[1,""],[0,"radio.se"]],"start1":1440,"start2":1440,"length1":16,"length2":16},{"diffs":[[0,"_GROUP)\n"],[-1,"\n"],[0,"// Hands"]],"start1":1468,"start2":1468,"length1":17,"length2":16}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"adio"],[-1,"SendObjec"],[1,"Ex"],[0,"t\",\n"]],"start1":16,"start2":16,"length1":17,"length2":10}]}]},{"timestamp":1741214904568,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"   }\n}\n\n"],[-1,"\n"],[0,"input.on"]],"start1":969,"start2":969,"length1":17,"length2":16}]}]},{"timestamp":1741214921636,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"iables><"],[1,"block type=\"device_forever\" x=\"250\" y=\"-1\"></block><block type=\"pxt-on-start\" x=\"40\" y=\"54\"><statement name=\"HANDLER\"><block type=\"variables_set\"><field name=\"VAR\" id=\"}X9z#Hm0he0@9N`}W3/m\">RADIO_GROUP</field><value name=\"VALUE\"><shadow type=\"math_number\"><field name=\"NUM\">11</field></shadow></value><next><block type=\"radio_set_group\"><value name=\"ID\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"255\" label=\"Id\" precision=\"0\"></mutation><field name=\"SLIDER\">1</field></shadow><block type=\"variables_get\"><field name=\"VAR\" id=\"}X9z#Hm0he0@9N`}W3/m\">RADIO_GROUP</field></block></value><next><block type=\"radio_datagram_send_string\"><value name=\"msg\"><shadow type=\"text\"><field name=\"TEXT\"></field></shadow></value></block></next></block></next></block></statement></block><block type=\"radio_on_string_drag\" x=\"57\" y=\"545\"><value name=\"HANDLER_DRAG_PARAM_receivedString\"><block type=\"argument_reporter_string\"><mutation duplicateondrag=\"true\"></mutation><field name=\"VALUE\">receivedString</field></block></value></block><"],[0,"/xml>"]],"start1":129,"start2":129,"length1":13,"length2":1046}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"\n}\n\n"],[-1,"// Test"],[0,"\ninp"]],"start1":973,"start2":973,"length1":15,"length2":8}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0," ],\n"],[-1,"    \"testFiles\": [\n        \"test.ts\"\n    ],\n"],[0,"    "]],"start1":234,"start2":234,"length1":52,"length2":8}]},{"type":"added","filename":"test.ts","value":"// tests go here; this will not be compiled when this package is used as an extension.\n"}]}],"snapshots":[{"timestamp":1741184390283,"editorVersion":"7.0.57","text":{"main.blocks":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n</xml>","main.ts":"\n","README.md":"","pxt.json":"{\n    \"name\": \"RadioExt\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"additionalFilePaths\": []\n}\n"}},{"timestamp":1741201666720,"editorVersion":"7.0.57","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables><variable id=\"}X9z#Hm0he0@9N`}W3/m\">RADIO_GROUP</variable></variables><block type=\"device_forever\" x=\"250\" y=\"-1\"></block><block type=\"pxt-on-start\" x=\"40\" y=\"54\"><statement name=\"HANDLER\"><block type=\"variables_set\"><field name=\"VAR\" id=\"}X9z#Hm0he0@9N`}W3/m\">RADIO_GROUP</field><value name=\"VALUE\"><shadow type=\"math_number\"><field name=\"NUM\">11</field></shadow></value><next><block type=\"radio_set_group\"><value name=\"ID\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"255\" label=\"Id\" precision=\"0\"></mutation><field name=\"SLIDER\">1</field></shadow><block type=\"variables_get\"><field name=\"VAR\" id=\"}X9z#Hm0he0@9N`}W3/m\">RADIO_GROUP</field></block></value><next><block type=\"radio_datagram_send_string\"><value name=\"msg\"><shadow type=\"text\"><field name=\"TEXT\"></field></shadow></value></block></next></block></next></block></statement></block><block type=\"radio_on_string_drag\" x=\"57\" y=\"545\"><value name=\"HANDLER_DRAG_PARAM_receivedString\"><block type=\"argument_reporter_string\"><mutation duplicateondrag=\"true\"></mutation><field name=\"VALUE\">receivedString</field></block></value></block></xml>","main.ts":"radio.onReceivedString(function (receivedString) {\n\t\n})\n\nlet RADIO_GROUP = 11\nradio.setGroup(RADIO_GROUP)\nradio.sendString(\"\")\nbasic.forever(function () {\n\t\n})\n","README.md":"","pxt.json":"{\n    \"name\": \"RadioExt\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n"}},{"timestamp":1741203467821,"editorVersion":"7.0.57","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables><variable id=\"}X9z#Hm0he0@9N`}W3/m\">RADIO_GROUP</variable></variables><block type=\"device_forever\" x=\"250\" y=\"-1\"></block><block type=\"pxt-on-start\" x=\"40\" y=\"54\"><statement name=\"HANDLER\"><block type=\"variables_set\"><field name=\"VAR\" id=\"}X9z#Hm0he0@9N`}W3/m\">RADIO_GROUP</field><value name=\"VALUE\"><shadow type=\"math_number\"><field name=\"NUM\">11</field></shadow></value><next><block type=\"radio_set_group\"><value name=\"ID\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"255\" label=\"Id\" precision=\"0\"></mutation><field name=\"SLIDER\">1</field></shadow><block type=\"variables_get\"><field name=\"VAR\" id=\"}X9z#Hm0he0@9N`}W3/m\">RADIO_GROUP</field></block></value><next><block type=\"radio_datagram_send_string\"><value name=\"msg\"><shadow type=\"text\"><field name=\"TEXT\"></field></shadow></value></block></next></block></next></block></statement></block><block type=\"radio_on_string_drag\" x=\"57\" y=\"545\"><value name=\"HANDLER_DRAG_PARAM_receivedString\"><block type=\"argument_reporter_string\"><mutation duplicateondrag=\"true\"></mutation><field name=\"VALUE\">receivedString</field></block></value></block></xml>","main.ts":"radio.onReceivedString(function (receivedString) {\n    let serialNumber = radio.receivedPacket(RadioPacketProperty.SerialNumber)\n    console.log({ serialNumber, receivedString })\n    rxBuffer[serialNumber] = (rxBuffer[serialNumber] || \"\")\n    if (rxBuffer[serialNumber].charCodeAt(0) == 2)\n    {\n        console\n    }\n})\n\nfunction onRadioReceivedObject(obj: any)\n{\n\n}\n\nfunction radioSendObject(obj: any)\n{\n    let data = JSON.stringify(obj);\n    if(data.length > MAX_PACKET_LENGTH)\n    {\n        data = `\\x02${data}\\x03`\n    }\n    for(let p = 0; p < data.length; p += MAX_PACKET_LENGTH)\n    {\n        radio.sendString(data.substr(p, MAX_PACKET_LENGTH))\n    }\n}\n\ninput.onButtonPressed(Button.A, function() {\n    radioSendObject({animal: \"elephantkayaksandbox\"})    \n})\n\n\nlet RADIO_GROUP: number = 11\nlet MAX_PACKET_LENGTH: number = 19\nlet SERIAL_NUMBER: number = control.deviceSerialNumber();\nlet rxBuffer: string[] = []\nradio.setTransmitSerialNumber(true)\nradio.setGroup(RADIO_GROUP)\n// Handshake\nradio.sendString(\"HELLO\")\n\n\nbasic.forever(function () {\n\t\n})\n","README.md":"","pxt.json":"{\n    \"name\": \"RadioExt\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n"}},{"timestamp":1741206259581,"editorVersion":"7.0.57","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables><variable id=\"}X9z#Hm0he0@9N`}W3/m\">RADIO_GROUP</variable></variables><block type=\"device_forever\" x=\"250\" y=\"-1\"></block><block type=\"pxt-on-start\" x=\"40\" y=\"54\"><statement name=\"HANDLER\"><block type=\"variables_set\"><field name=\"VAR\" id=\"}X9z#Hm0he0@9N`}W3/m\">RADIO_GROUP</field><value name=\"VALUE\"><shadow type=\"math_number\"><field name=\"NUM\">11</field></shadow></value><next><block type=\"radio_set_group\"><value name=\"ID\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"255\" label=\"Id\" precision=\"0\"></mutation><field name=\"SLIDER\">1</field></shadow><block type=\"variables_get\"><field name=\"VAR\" id=\"}X9z#Hm0he0@9N`}W3/m\">RADIO_GROUP</field></block></value><next><block type=\"radio_datagram_send_string\"><value name=\"msg\"><shadow type=\"text\"><field name=\"TEXT\"></field></shadow></value></block></next></block></next></block></statement></block><block type=\"radio_on_string_drag\" x=\"57\" y=\"545\"><value name=\"HANDLER_DRAG_PARAM_receivedString\"><block type=\"argument_reporter_string\"><mutation duplicateondrag=\"true\"></mutation><field name=\"VALUE\">receivedString</field></block></value></block></xml>","main.ts":"radio.onReceivedString(function (receivedString) {\n    let serialNumber = radio.receivedPacket(RadioPacketProperty.SerialNumber)\n    console.log({ serialNumber, receivedString })\n    rxBuffer[serialNumber] = (rxBuffer[serialNumber] || \"\")\n    if (rxBuffer[serialNumber].charCodeAt(0) == 2)\n    {\n        console.log('batch detected')\n    }\n})\n\nfunction onRadioReceivedObject(obj: any)\n{\n\n}\n\nfunction radioSendObject(obj: any)\n{\n    let data = JSON.stringify(obj);\n    if(data.length > MAX_PACKET_LENGTH)\n    {\n        data = `\\x02${data}\\x03`\n    }\n    for(let p = 0; p < data.length; p += MAX_PACKET_LENGTH)\n    {\n        radio.sendString(data.substr(p, MAX_PACKET_LENGTH))\n    }\n}\n\ninput.onButtonPressed(Button.A, function() {\n    radioSendObject({animal: \"elephantkayaksandbox\"})    \n})\n\n\nlet RADIO_GROUP: number = 11\nlet MAX_PACKET_LENGTH: number = 19\nlet SERIAL_NUMBER: number = control.deviceSerialNumber();\nlet rxBuffer: string[] = []\nradio.setTransmitSerialNumber(true)\nradio.setGroup(RADIO_GROUP)\n// Handshake\nradio.sendString(\"HELLO\")\n\n\nbasic.forever(function () {\n\t\n})\n","README.md":"","pxt.json":"{\n    \"name\": \"RadioExt\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n"}},{"timestamp":1741213113652,"editorVersion":"7.0.57","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables><variable id=\"}X9z#Hm0he0@9N`}W3/m\">RADIO_GROUP</variable></variables><block type=\"device_forever\" x=\"250\" y=\"-1\"></block><block type=\"pxt-on-start\" x=\"40\" y=\"54\"><statement name=\"HANDLER\"><block type=\"variables_set\"><field name=\"VAR\" id=\"}X9z#Hm0he0@9N`}W3/m\">RADIO_GROUP</field><value name=\"VALUE\"><shadow type=\"math_number\"><field name=\"NUM\">11</field></shadow></value><next><block type=\"radio_set_group\"><value name=\"ID\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"255\" label=\"Id\" precision=\"0\"></mutation><field name=\"SLIDER\">1</field></shadow><block type=\"variables_get\"><field name=\"VAR\" id=\"}X9z#Hm0he0@9N`}W3/m\">RADIO_GROUP</field></block></value><next><block type=\"radio_datagram_send_string\"><value name=\"msg\"><shadow type=\"text\"><field name=\"TEXT\"></field></shadow></value></block></next></block></next></block></statement></block><block type=\"radio_on_string_drag\" x=\"57\" y=\"545\"><value name=\"HANDLER_DRAG_PARAM_receivedString\"><block type=\"argument_reporter_string\"><mutation duplicateondrag=\"true\"></mutation><field name=\"VALUE\">receivedString</field></block></value></block></xml>","main.ts":"radio.onReceivedString(function (receivedString) {\n    let serialNumber = radio.receivedPacket(RadioPacketProperty.SerialNumber)\n    console.log({ serialNumber, receivedString })\n    rxBuffer[serialNumber] = (rxBuffer[serialNumber] || \"\")\n    if (rxBuffer[serialNumber].charCodeAt(0) == 2)\n    {\n        console.log('batch detected')\n        if (rxBuffer[serialNumber].charCodeAt(rxBuffer[serialNumber].length - 1) == 3)\n        {\n            \n        }\n    }\n})\n\nfunction onRadioReceivedObject(obj: any)\n{\n\n}\n\nfunction radioSendObject(obj: any)\n{\n    let data = JSON.stringify(obj);\n    if(data.length > MAX_PACKET_LENGTH)\n    {\n        data = `\\x02${data}\\x03`\n    }\n    for(let p = 0; p < data.length; p += MAX_PACKET_LENGTH)\n    {\n        radio.sendString(data.substr(p, MAX_PACKET_LENGTH))\n    }\n}\n\ninput.onButtonPressed(Button.A, function() {\n    radioSendObject({animal: \"elephantkayaksandbox\"})    \n})\n\n\nlet RADIO_GROUP: number = 11\nlet MAX_PACKET_LENGTH: number = 19\nlet SERIAL_NUMBER: number = control.deviceSerialNumber();\nlet rxBuffer: string[] = []\nradio.setTransmitSerialNumber(true)\nradio.setGroup(RADIO_GROUP)\n// Handshake\nradio.sendString(\"HELLO\")\n\n\nbasic.forever(function () {\n\t\n})\n","README.md":"","pxt.json":"{\n    \"name\": \"RadioExt\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n"}},{"timestamp":1741214921636,"editorVersion":"7.0.57","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables><variable id=\"}X9z#Hm0he0@9N`}W3/m\">RADIO_GROUP</variable></variables><block type=\"device_forever\" x=\"250\" y=\"-1\"></block><block type=\"pxt-on-start\" x=\"40\" y=\"54\"><statement name=\"HANDLER\"><block type=\"variables_set\"><field name=\"VAR\" id=\"}X9z#Hm0he0@9N`}W3/m\">RADIO_GROUP</field><value name=\"VALUE\"><shadow type=\"math_number\"><field name=\"NUM\">11</field></shadow></value><next><block type=\"radio_set_group\"><value name=\"ID\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"255\" label=\"Id\" precision=\"0\"></mutation><field name=\"SLIDER\">1</field></shadow><block type=\"variables_get\"><field name=\"VAR\" id=\"}X9z#Hm0he0@9N`}W3/m\">RADIO_GROUP</field></block></value><next><block type=\"radio_datagram_send_string\"><value name=\"msg\"><shadow type=\"text\"><field name=\"TEXT\"></field></shadow></value></block></next></block></next></block></statement></block><block type=\"radio_on_string_drag\" x=\"57\" y=\"545\"><value name=\"HANDLER_DRAG_PARAM_receivedString\"><block type=\"argument_reporter_string\"><mutation duplicateondrag=\"true\"></mutation><field name=\"VALUE\">receivedString</field></block></value></block></xml>","main.ts":"radio.onReceivedString(function (receivedString) {\n    let serialNumber = radio.receivedPacket(RadioPacketProperty.SerialNumber)\n    rxBuffer[serialNumber] = (rxBuffer[serialNumber] || \"\") + receivedString\n    if (rxBuffer[serialNumber].charCodeAt(0) == 2)\n    {\n        if (rxBuffer[serialNumber].charCodeAt(rxBuffer[serialNumber].length - 1) == 3)\n        {\n            rxBuffer[serialNumber] = rxBuffer[serialNumber].slice(1,-1)\n        }\n        else\n        {\n            return;\n        }\n    }\n    let obj = JSON.parse(rxBuffer[serialNumber])\n    rxBuffer[serialNumber] = ''\n    onRadioReceivedObject(obj)\n})\n\nfunction onRadioReceivedObject(obj: any)\n{\n    console.log(obj)\n}\n\nfunction radioSendObject(obj: any)\n{\n    let data = JSON.stringify(obj);\n    if(data.length > MAX_PACKET_LENGTH)\n    {\n        data = `\\x02${data}\\x03`\n    }\n    for(let p = 0; p < data.length; p += MAX_PACKET_LENGTH)\n    {\n        radio.sendString(data.substr(p, MAX_PACKET_LENGTH))\n    }\n}\n\ninput.onButtonPressed(Button.A, function() {\n    radioSendObject({str: \"thisisastringlongerthanapacket\", arr: [1,2,3], bool: true})\n})\n\nlet RADIO_GROUP: number = 11\nlet MAX_PACKET_LENGTH: number = 19\nlet SERIAL_NUMBER: number = control.deviceSerialNumber();\nlet rxBuffer: string[] = []\nradio.setTransmitSerialNumber(true)\nradio.setGroup(RADIO_GROUP)\n\n// Handshake\nradio.sendString(\"null\")\n\n\nbasic.forever(function () {\n\t\n})\n","README.md":"","pxt.json":"{\n    \"name\": \"RadioSendObject\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n"}}],"shares":[],"lastSaveTime":1741215052874}